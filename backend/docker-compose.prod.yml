version: '3.8'

services:
  notes-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    ports:
      - "5000:80"
      - "5001:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=NotesApp;User Id=sa;Password=${SQL_PASSWORD:-YourPassword123!};TrustServerCertificate=true;
      - JWT__SecretKey=${JWT_SECRET}
      - JWT__Issuer=${JWT_ISSUER:-NotesApp}
      - JWT__Audience=${JWT_AUDIENCE:-NotesApp}
      - JWT__ExpiryHours=${JWT_EXPIRY_HOURS:-24}
      - Cors__AllowedOrigins__0=${CORS_ORIGIN_0:-https://your-frontend-domain.com}
      - Cors__AllowedOrigins__1=${CORS_ORIGIN_1:-https://www.your-frontend-domain.com}
    depends_on:
      sqlserver:
        condition: service_healthy
    volumes:
      - app_logs:/app/logs
    networks:
      - notes-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '1.0'
          memory: 512M
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SQL_PASSWORD:-YourPassword123!}
      - MSSQL_PID=Express
      - MSSQL_TCP_PORT=1433
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
      - ./sql-scripts:/docker-entrypoint-initdb.d:ro
    networks:
      - notes-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${SQL_PASSWORD:-YourPassword123!} -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 4G
        reservations:
          cpus: '2.0'
          memory: 2G

  reverse-proxy:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - notes-api
    networks:
      - notes-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  sqlserver_data:
    driver: local
  app_logs:
    driver: local

networks:
  notes-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 