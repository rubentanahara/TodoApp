version: '3.8'

services:
  notes-api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:80"
      - "8081:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=NotesApp;User Id=sa;Password=YourPassword123!;TrustServerCertificate=true;
      - JWT__SecretKey=${JWT_SECRET:-your-very-long-and-secure-secret-key-for-production-use}
      - JWT__Issuer=NotesApp
      - JWT__Audience=NotesApp
      - JWT__ExpiryHours=24
      - Cors__AllowedOrigins__0=http://localhost:3000
      - Cors__AllowedOrigins__1=https://localhost:3000
    depends_on:
      - sqlserver
    volumes:
      - app_logs:/app/logs
    networks:
      - notes-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourPassword123!
      - MSSQL_PID=Express
      - MSSQL_TCP_PORT=1433
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - notes-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P YourPassword123! -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G

volumes:
  sqlserver_data:
    driver: local
  app_logs:
    driver: local

networks:
  notes-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 